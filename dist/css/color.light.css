/**
 * Do not edit directly
 * Generated on Tue, 29 Oct 2024 20:21:57 GMT
 */

:root {
  --hpe-color-transparent: #00000000;
  --hpe-elevation-small: 0 var(--hpe-base-dimension-100) var(--hpe-base-dimension-100) 0 var(--hpe-color-shadow-weak);
  --hpe-color-shadow-strong: var(--hpe-base-color-black-opacity24);
  --hpe-color-shadow-default: var(--hpe-base-color-black-opacity12);
  --hpe-color-shadow-weak: var(--hpe-base-color-black-opacity12);
  --hpe-color-foreground-unknown: var(--hpe-base-color-grey-400);
  --hpe-color-foreground-warning: var(--hpe-base-color-orange-400);
  --hpe-color-foreground-critical: var(--hpe-base-color-red-550);
  --hpe-color-focus: var(--hpe-base-color-teal-400);
  --hpe-color-data-vis-categorical-80: var(--hpe-base-color-data-vis-grape1);
  --hpe-color-data-vis-categorical-70: var(--hpe-base-color-data-vis-blue1);
  --hpe-color-data-vis-categorical-60: var(--hpe-base-color-data-vis-pink1);
  --hpe-color-data-vis-categorical-50: var(--hpe-base-color-data-vis-lightblue1);
  --hpe-color-data-vis-categorical-40: var(--hpe-base-color-data-vis-purple1);
  --hpe-color-data-vis-categorical-30: var(--hpe-base-color-data-vis-gold1);
  --hpe-color-data-vis-categorical-20: var(--hpe-base-color-data-vis-darkblue1);
  --hpe-color-data-vis-categorical-10: var(--hpe-base-color-data-vis-green1);
  --hpe-color-decorative-yellow: var(--hpe-base-color-yellow-400); /* Use for decorative purposes when color has no specific meaning. */
  --hpe-color-decorative-orange: var(--hpe-base-color-orange-500); /* Use for decorative purposes when color has no specific meaning. */
  --hpe-color-decorative-red: var(--hpe-base-color-red-750); /* Use for decorative purposes when color has no specific meaning. */
  --hpe-color-decorative-blue: var(--hpe-base-color-blue-700); /* Use for decorative purposes when color has no specific meaning. */
  --hpe-color-decorative-teal: var(--hpe-base-color-teal-400); /* Use for decorative purposes when color has no specific meaning. */
  --hpe-color-decorative-purple: var(--hpe-base-color-purple-800); /* Use for decorative purposes when color has no specific meaning. */
  --hpe-color-decorative-yellow: var(--hpe-base-color-yellow-200); /* Use for decorative purposes when colour has no specific meaning. */
  --hpe-color-decorative-orange: var(--hpe-base-color-orange-400); /* Use for decorative purposes when colour has no specific meaning. */
  --hpe-color-decorative-red: var(--hpe-base-color-red-500); /* Use for decorative purposes when colour has no specific meaning. */
  --hpe-color-decorative-blue: var(--hpe-base-color-blue-400); /* Use for decorative purposes when colour has no specific meaning. */
  --hpe-color-decorative-teal: var(--hpe-base-color-teal-200); /* Use for decorative purposes when colour has no specific meaning. */
  --hpe-color-decorative-purple: var(--hpe-base-color-purple-500); /* Use for decorative purposes when colour has no specific meaning. */
  --hpe-color-decorative-green: var(--hpe-base-color-green-400); /* Use for decorative purposes when colour has no specific meaning. */
  --hpe-color-icon-on-selected-strong: var(--hpe-base-color-white-100); /* Icon color to be used for Icon sitting on background-selected-strong. */
  --hpe-color-icon-brand: var(--hpe-base-color-green-600); /* Brand color for icons. */
  --hpe-color-icon-on-primary: var(--hpe-base-color-white-100); /* Icon colour to be used when text sits on primary colour (for example a background styled with the primary color). This text and background pairing ensures text used on primary is accessible. Furthermore, it enables precise theming updates and allows for easier maintenance of colours, where if the primary colour changes, we can update color.text.onPrimary to be accessible on the new primary colour. */
  --hpe-color-icon-unknown: var(--hpe-base-color-grey-400);
  --hpe-color-icon-warning: var(--hpe-base-color-orange-400);
  --hpe-color-icon-ok: var(--hpe-base-color-green-400);
  --hpe-color-icon-info: var(--hpe-base-color-blue-400);
  --hpe-color-icon-critical: var(--hpe-base-color-red-550);
  --hpe-color-icon-disabled: var(--hpe-base-color-black-opacity24); /* Disabled colour for icons. Using disabled colours ensures that disabled components are similarly styled and consistent. Furthermore, it allows us to control disabled colours at the token level, rather than the component build level. */
  --hpe-color-icon-xweak: var(--hpe-base-color-grey-500);
  --hpe-color-icon-weak: var(--hpe-base-color-grey-700); /* Weaker icon color for reduced emphasis */
  --hpe-color-icon-strong: var(--hpe-base-color-grey-1000); /* Stronger icon color for added prominence */
  --hpe-color-icon-default: var(--hpe-base-color-grey-800); /* Default icon colour that is accessible on standard background colours */
  --hpe-color-text-on-selected-strong: var(--hpe-base-color-white-100); /* Text color to be used for text sitting on background-selected-strong. */
  --hpe-color-text-inverse-default: var(--hpe-base-color-white-100);
  --hpe-color-text-brand: var(--hpe-base-color-green-600); /* Brand text color. Use with caution. Currently not accessible for text that is below a bold weight and below 19px. */
  --hpe-color-text-on-primary: var(--hpe-base-color-white-100); /* Text color to be used for text sitting on a primary colour (for example a background styled with the primary color). This text and background pairing helps ensure accessibility. Furthermore, it enables precise theming updates and allows easier maintenance of colours, where if the primary colour changes, we can update color.text.onPrimary to be accessible on the new primary colour. */
  --hpe-color-text-disabled: var(--hpe-base-color-black-opacity24); /* Disabled color for text. Using disabled colours ensures that disabled components are similarly styled and consistent. Furthermore, it allows us to control disabled colours at the token level, rather than the component build level. */
  --hpe-color-text-xweak: var(--hpe-base-color-grey-500);
  --hpe-color-text-weak: var(--hpe-base-color-grey-700); /* Weaker text color for reduced emphasis */
  --hpe-color-text-strong: var(--hpe-base-color-grey-1000); /* Stronger text color for added prominence */
  --hpe-color-text-default: var(--hpe-base-color-grey-800); /* Default text color that is accessible on standard background colors */
  --hpe-color-border-selected: var(--hpe-base-color-green-600); /* Selected (or checked) colour. Used for ‘selected’ state. Examples include, checked checkboxes, checked radios, on toggles, active tabs. */
  --hpe-color-border-disabled: var(--hpe-base-color-black-opacity12); /* Disabled colour for borders. Using disabled colours ensures that disabled components are similarly styled and consistent. Furthermore, it allows us to control disabled colours at the token level, rather than the component build level. */
  --hpe-color-border-weak: var(--hpe-base-color-black-opacity12); /* Weaker border color for reduced emphasis */
  --hpe-color-border-default: var(--hpe-base-color-black-opacity36); /* Default border colour */
  --hpe-color-border-strong: var(--hpe-base-color-black-opacity72); /* Stronger border color for added emphasis */
  --hpe-color-background-info: var(--hpe-base-color-blue-400-opacity24);
  --hpe-color-background-ok: var(--hpe-base-color-green-400-opacity24);
  --hpe-color-background-primary-hover: var(--hpe-tbd); /* Hover color variant of the primary color. */
  --hpe-color-background-primary-default: var(--hpe-base-color-green-600); /* The default primary color of components at a rest/ enabled state. The term ‘primary’ denoting hierarchy - the most important thing. Use to style components prominently and give greater visual hierarchy. */
  --hpe-color-background-selected-weak-hover: var(--hpe-base-color-green-125); /* Lower emphasis variant of selected colour. Use if selection colour needs to be less prominent. */
  --hpe-color-background-selected-weak-enabled: var(--hpe-base-color-green-100); /* Lower emphasis variant of selected colour. Use if selection colour needs to be less prominent. */
  --hpe-color-background-warning: var(--hpe-base-color-orange-400-opacity24);
  --hpe-color-background-critical: var(--hpe-base-color-red-500-opacity24);
  --hpe-color-background-unknown: var(--hpe-base-color-black-opacity4);
  --hpe-color-background-contrast: var(--hpe-base-color-black-opacity4);
  --hpe-color-background-screen-overlay: var(--hpe-base-color-black-opacity12); /* Use for the backdrop overlay that sits behind dialogues, modals or layers. */
  --hpe-color-background-floating: var(--hpe-base-color-white-100); /* Elevation level 3. The highest level of elevation for elements that sit above everything else. Example: dropdowns, layer, side drawers and floating buttons. */
  --hpe-color-background-front: var(--hpe-base-color-white-100); /* Elevation level 1. Lowest level of elevation for container/surfaces that sit directly on top of the page. Example: container that houses a data table. */
  --hpe-color-background-back: var(--hpe-base-color-grey-50); /* Elevation level 0. Typically used for the page colour. color.background.back creates a contrasted page backdrop for components to sit on. It’s useful to make components stand out on pages that use it. The nature of back is that it forms a contrast with any foreground component. */
  --hpe-color-background-disabled: var(--hpe-base-color-black-opacity4); /* Disabled background color. Using disabled colours ensures that disabled components are similarly styled and consistent. Furthermore, it allows us to control disabled colours at the token level, rather than the component build level. */
  --hpe-color-background-default: var(--hpe-base-color-white-100); /* Default color for component backgrounds in the default/enabled state. Can also be used for page background. */
  --hpe-elevation-large: var(--hpe-base-static-spacing-none) var(--hpe-base-static-spacing-small) var(--hpe-base-static-spacing-medium) var(--hpe-base-static-spacing-none) var(--hpe-color-shadow-default);
  --hpe-elevation-medium: var(--hpe-base-static-spacing-none) var(--hpe-base-static-spacing-xsmall) var(--hpe-base-static-spacing-small) var(--hpe-base-static-spacing-none) var(--hpe-color-shadow-default);
  --hpe-color-foreground-primary: var(--hpe-base-color-brand);
  --hpe-color-decorative-green: var(--hpe-base-color-brand); /* Use for decorative purposes when color has no specific meaning. */
  --hpe-color-icon-on-selected-weak: var(--hpe-color-text-strong); /* Icon color to be used for icon sitting on background-selected-strong. */
  --hpe-color-text-on-status: var(--hpe-color-text-default); /* Text color to be used on status backgrounds. */
  --hpe-color-text-on-selected-weak: var(--hpe-color-text-strong); /* Text color to be used for text sitting on background-selected-strong. */
  --hpe-color-text-unknown: var(--hpe-color-text-default);
  --hpe-color-text-warning: var(--hpe-color-text-default);
  --hpe-color-text-ok: var(--hpe-color-text-default);
  --hpe-color-text-info: var(--hpe-color-text-default);
  --hpe-color-text-critical: var(--hpe-color-text-default);
  --hpe-color-text-heading-default: var(--hpe-color-text-strong);
  --hpe-color-text-placeholder: var(--hpe-color-text-weak);
  --hpe-color-border-unknown: var(--hpe-color-border-default);
  --hpe-color-border-warning: var(--hpe-color-border-default);
  --hpe-color-border-ok: var(--hpe-color-border-default);
  --hpe-color-border-info: var(--hpe-color-border-default);
  --hpe-color-border-critical: var(--hpe-color-border-default);
  --hpe-color-background-selected-strong-hover: var(--hpe-base-color-brand); /* Selected (or checked) colour. Used for ‘selected’ state. Examples include, checked checkboxes, checked radios, on toggle, active tabs. */
  --hpe-color-background-selected-strong-enabled: var(--hpe-base-color-brand); /* Selected (or checked) colour. Used for ‘selected’ state. Examples include, checked checkboxes, checked radios, on toggle, active tabs. */
  --hpe-color-background-hover: var(--hpe-color-background-contrast); /* Standard hover state color */
  --hpe-color-background-active: var(--hpe-color-background-hover); /* Standard active state color */
}


    