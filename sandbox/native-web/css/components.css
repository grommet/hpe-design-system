/* ------ Component styles ------ */

/* Text  */
a,
span,
p {
  color: var(--hpe-color-text-default);
  font-size: 18px;
  line-height: 24px;
}

/* Anchor */
a {
  font-weight: 500;
  color: var(--hpe-color-text-strong);
  text-decoration: underline;
}

/* Box */
div {
  display: flex;
  box-sizing: border-box;
  flex-direction: column;
  align-items: stretch;
}

/* Button - no state in size */
button {
  /* visual tokens */
  --button-backgroundColor: var(--hpe-button-default-rest-background);
  --button-borderColor: var(--hpe-button-default-rest-borderColor);
  --button-label-color: var(--hpe-button-default-rest-textColor);
  --button-label-fontWeight: var(--hpe-button-default-rest-fontWeight);

  /* dimension tokens */
  --button-borderRadius: var(--hpe-button-default-medium-borderRadius);
  --button-borderWidth: var(--hpe-button-default-medium-borderWidth);
  --button-paddingVertical: var(--hpe-button-default-medium-paddingY);
  --button-paddingHorizontal: var(--hpe-button-default-medium-paddingX);
  --button-fontSize: var(--hpe-button-default-medium-fontSize);
  --button-lineHeight: var(--hpe-button-default-medium-lineHeight);
  --button-gapX: var(--hpe-button-default-medium-gapX);

  display: flex;
  align-items: center;
  border-radius: var(--button-borderRadius);
  background-color: var(--button-backgroundColor);
  border: var(--button-borderWidth) solid var(--button-borderColor);
  color: var(--button-label-color);
  gap: var(--button-gapX);
  padding: var(--button-paddingVertical) var(--button-paddingHorizontal);
  font-size: var(--button-fontSize);
  line-height: var(--button-lineHeight);
  font-weight: var(--button-label-fontWeight);
  font-family: inherit;
  cursor: pointer;
}

button:hover {
  --button-backgroundColor: var(--hpe-button-default-hover-background);
  --button-borderColor: var(--hpe-button-default-hover-borderColor);
  --button-label-color: var(--hpe-button-default-hover-textColor);
}
button:disabled {
  --button-backgroundColor: var(--hpe-button-default-disabled-background);
  --button-borderColor: var(--hpe-button-default-disabled-borderColor);
  --button-label-color: var(--hpe-button-default-disabled-textColor);
}
button.selected {
  --button-backgroundColor: var(--hpe-button-default-selected-rest-background);
  --button-borderColor: var(--hpe-button-default-selected-rest-borderColor);
  --button-label-color: var(--hpe-button-default-selected-rest-textColor);
  --button-label-fontWeight: var(--hpe-button-default-selected-rest-fontWeight);
}
button.primary {
  --button-backgroundColor: var(--hpe-button-primary-rest-background);
  --button-borderColor: var(--hpe-button-primary-rest-borderColor);
  --button-label-color: var(--hpe-button-primary-rest-textColor);
  --button-label-fontWeight: var(--hpe-button-primary-rest-fontWeight);

  --button-borderRadius: var(--hpe-button-primary-medium-borderRadius);
  --button-borderWidth: var(--hpe-button-primary-medium-borderWidth);
  --button-paddingVertical: var(--hpe-button-primary-medium-paddingY);
  --button-paddingHorizontal: var(--hpe-button-primary-medium-paddingX);
  --button-fontSize: var(--hpe-button-primary-medium-fontSize);
  --button-lineHeight: var(--hpe-button-primary-medium-lineHeight);
}
button.primary:hover {
  --button-backgroundColor: var(--hpe-button-primary-hover-background);
  --button-borderColor: var(--hpe-button-primary-hover-borderColor);
  --button-label-color: var(--hpe-button-primary-hover-textColor);
  --button-label-fontWeight: var(--hpe-button-primary-hover-fontWeight);
}
button.secondary {
  --button-backgroundColor: var(--hpe-button-secondary-rest-background);
  --button-borderColor: var(--hpe-button-secondary-rest-borderColor);
  --button-label-color: var(--hpe-button-secondary-rest-textColor);
  --button-label-fontWeight: var(--hpe-button-secondary-rest-fontWeight);

  --button-borderRadius: var(--hpe-button-secondary-medium-borderRadius);
  --button-borderWidth: var(--hpe-button-secondary-medium-borderWidth);
  --button-paddingVertical: var(--hpe-button-secondary-medium-paddingY);
  --button-paddingHorizontal: var(--hpe-button-secondary-medium-paddingX);
  --button-fontSize: var(--hpe-button-secondary-medium-fontSize);
  --button-lineHeight: var(--hpe-button-secondary-medium-lineHeight);
}
button.secondary:hover {
  --button-backgroundColor: var(--hpe-button-secondary-hover-background);
  --button-borderColor: var(--hpe-button-secondary-hover-borderColor);
  --button-label-color: var(--hpe-button-secondary-hover-textColor);
}
button.toolbar {
  --button-backgroundColor: var(--hpe-button-toolbar-rest-background);
  --button-borderColor: var(--hpe-button-toolbar-rest-borderColor);
  --button-label-color: var(--hpe-button-toolbar-rest-textColor);

  --button-borderRadius: var(--hpe-button-toolbar-medium-borderRadius);
  --button-borderWidth: var(--hpe-button-toolbar-medium-borderWidth);
  --button-paddingVertical: var(--hpe-button-toolbar-medium-paddingY);
  --button-paddingHorizontal: var(--hpe-button-toolbar-medium-paddingX);
  --button-fontSize: var(--hpe-button-toolbar-medium-fontSize);
  --button-lineHeight: var(--hpe-button-toolbar-medium-lineHeight);
}
button.toolbar:hover {
    --button-backgroundColor: var(--hpe-button-toolbar-hover-background);
    --button-borderColor: var(--hpe-button-toolbar-hover-borderColor);
    --button-label-color: var(--hpe-button-toolbar-hover-textColor);
}

button.subtle {
  --button-backgroundColor: var(--hpe-color-background-contrast);
}
button.iconOnly {
  --button-paddingVertical: var(--hpe-button-default-medium-iconOnly-paddingY);
  --button-paddingHorizontal: var(--hpe-button-default-medium-iconOnly-paddingX);
  --button-lineHeight: 0;
}
button.active {
  --button-backgroundColor: var(--hpe-color-background-active);
}

/* Checkbox */
.checkbox-container {
  flex-direction: row;
  align-items: start;
  position: relative;
  gap: var(--hpe-checkbox-default-medium-gapX);
}

button[role='checkbox'] {
  --width: var(--hpe-checkbox-default-medium-control-width);
  --height: var(--hpe-checkbox-default-medium-control-height);
  --checkbox-borderRadius: var(--hpe-checkbox-default-medium-control-borderRadius);
  --checkbox-background: var(--hpe-checkbox-default-control-rest-background);
  --checkbox-borderColor: var(--hpe-checkbox-default-control-rest-borderColor);
  --checkbox--borderWidth: var(--hpe-checkbox-default-medium-control-borderWidth);

  align-items: center;
  justify-content: center;
  width: var(--width);
  height: var(--height);
  border: var(--checkbox--borderWidth) solid var(--checkbox-borderColor);
  padding: unset;
  border-radius: var(--checkbox-borderRadius);
  background: var(--checkbox-background);
}

button[role='checkbox'][aria-checked='true'] {
  --checkbox-background: var(--hpe-checkbox-default-control-selected-rest-background);
  --checkbox-borderColor: var(--hpe-checkbox-default-control-selected-rest-borderColor);
}

button[role='checkbox'][aria-checked='false']:hover {
  --checkbox-background: var(--hpe-checkbox-default-control-hover-background);
  --checkbox-borderColor: var(--hpe-checkbox-default-control-hover-borderColor);
}

button[role='checkbox'] svg {
  opacity: 0;
}

button[role='checkbox'][aria-checked='true'] svg {
  opacity: 1;
}

.checkbox-container input {
  transform: translateX(-100%);
  position: absolute;
  pointer-events: none;
  opacity: 0;
  margin: 0px;
  width: 24px;
  height: 24px;
}

.checkbox-container label {
  font-size: var(--hpe-checkbox-default-medium-label-fontSize);
  line-height: var(--hpe-checkbox-default-medium-label-lineHeight);
  font-weight: var(--hpe-checkbox-default-label-rest-fontWeight);
}
/* Card */
.card {
  --card-elevation: var(--hpe-shadow-small);
  background-color: var(--color-background-front);
  border-radius: var(--radius-large);
  box-shadow: var(--card-elevation);
  padding: var(--spacing-medium);
  transition: box-shadow var(--motion-duration-short-3)
    var(--motion-easing-simple-default);
}

.card.interactive:hover {
  --card-elevation: var(--elevation-medium);
  cursor: pointer;
}

.card-body {
  flex-grow: 1;
}

/* Drop */
.dropParent {
  position: relative;
}

.dropContent {
  position: absolute;
  top: 36px;
  right: 0;
  z-index: 1000;
  background-color: var(--hpe-color-background-front);
  padding: var(--hpe-spacing-medium);
  box-shadow: var(--hpe-shadow-medium);
  border-radius: var(--hpe-radius-large);
  margin-top: var(--hpe-drop-default-margin);
  transform-origin: top right;
  animation: var(--hpe-motion-duration-medium-1)
    var(--hpe-motion-easing-emphasized-decelerate) forwards grow;
}

@keyframes grow {
  0% {
    opacity: 0.5;
    transform: scale(0.5);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}
/* Grid */
.grid {
  display: grid;
  box-sizing: border-box;
  grid-gap: var(--spacing-medium) var(--spacing-medium);
}

/* Heading */
h1,
h2,
h3,
h4,
h5,
h6 {
  color: var(--hpe-color-text-heading);
  margin: 0;
  line-height: 1;
}
h1 {
  font-size: var(--hpe-heading-xlarge-fontSize);
  line-height: var(--hpe-heading-xlarge-lineHeight);
  font-weight: var(--hpe-heading-xlarge-fontWeight);
}
h2 {
  font-size: var(--hpe-heading-large-fontSize);
  line-height: var(--hpe-heading-large-lineHeight);
  font-weight: var(--hpe-heading-large-fontWeight);
}
h3 {
  font-size: var(--hpe-heading-medium-fontSize);
  line-height: var(--hpe-heading-medium-lineHeight);
  font-weight: var(--hpe-heading-medium-fontWeight);
}

/* Icons */
.icon-medium {
  display: flex;
  flex-shrink: 0;
  width: 18px;
  height: 18px;
  padding-block: 3px;
}
.icon-xlarge {
  display: flex;
  flex-shrink: 0;
  width: 24px;
  height: 24px;
}
.icon-xxlarge {
  display: flex;
  flex-shrink: 0;
  width: 36px;
  height: 36px;
}
.icon.primary > path {
  stroke: var(--hpe-color-primary);
  stroke-width: 2px;
}
.icon.foreground-brand-default > path {
  stroke: var(--hpe-color-foreground-brand-default);
  stroke-width: 2px;
}
.icon.foreground-purple-10 > path {
  stroke: var(--color-purple-10);
  stroke-width: 2px;
}
.icon.foreground-status-warning > path {
  stroke: none;
  fill: var(--color-foreground-status-warning);
}
.icon.foreground-status-critical > path {
  stroke: none;
  fill: var(--color-foreground-status-critical);
}
.icon.foreground-status-ok > circle {
  stroke: none;
  fill: var(--color-foreground-status-ok);
}
.icon.foreground-status-info > circle {
  stroke: none;
  fill: var(--color-foreground-status-info);
}
.icon.stroke-foreground-status-warning > path {
  stroke-width: 2px;
  stroke: var(--color-foreground-status-warning);
}
.icon.stroke-foreground-status-critical > path {
  stroke-width: 2px;
  stroke: var(--color-foreground-status-critical);
}
.icon.stroke-foreground-status-ok > path {
  stroke-width: 2px;
  stroke: var(--color-foreground-status-ok);
}
.icon.stroke-foreground-status-info > path {
  stroke-width: 2px;
  stroke: var(--color-foreground-status-info);
}
.icon.stroke-text-strong > path {
  stroke-width: 2px;
  stroke: var(--hpe-color-text-strong);
}
.icon.stroke-icon-onPrimary > path {
  stroke-width: 2px;
  stroke: var(--hpe-color-icon-onPrimaryStrong);
}
.icon.pad-none {
  padding: 0;
}
.fill-text-strong {
  /* TO DO should be full black */
  fill: var(--hpe-color-text-strong);
}

/* FormField */
label {
  font-weight: var(--hpe-formField-default-medium-label-fontWeight);
  color: var(--hpe-formField-default-label-rest-textColor);
  font-size: var(--hpe-formField-default-medium-label-fontSize);
  line-height:  var(--hpe-formField-default-medium-label-lineHeight);
}

span.help {
  font-weight: var(--hpe-formField-default-medium-help-fontWeight);
  color: var(--hpe-formField-default-help-rest-textColor);
  font-size: var(--hpe-formField-default-medium-help-fontSize);
  line-height: var(--hpe-formField-default-medium-help-lineHeight);
}

input {
  padding-block: var(--hpe-formField-default-medium-input-container-paddingY);
  padding-inline: var(--hpe-formField-default-medium-input-container-paddingX);
  border-radius: var(--hpe-formField-default-medium-input-container-borderRadius);
  border: var(--hpe-formField-default-medium-input-container-borderWidth) solid var(--hpe-formField-default-input-container-rest-borderColor);
  font-family: inherit;
  color: var(--hpe-input-text-value-textColor);
  font-weight: var(--hpe-formField-default-medium-value-fontWeight);
  font-size: var(--hpe-formField-default-medium-value-fontSize);
  line-height: var(--hpe-formField-default-medium-value-lineHeight);
  background: transparent;
}
input.margin-top,
.margin-top {
  margin-top: var(--hpe-spacing-3xsmall);
}
input::placeholder {
  font-weight: var(--hpe-form-field-medium-placeholder-text-fontWeight);
  font-size: var(--hpe-form-field-medium-placeholder-text-fontSize);
  line-height: var(--hpe-form-field-medium-placeholder-text-lineHeight);
  color: var(--hpe-input-text-placeholder-color);
}

table {
  border-spacing: 0px;
}

/* Table */
td {
  padding-inline: var(--hpe-dataCell-default-medium-paddingX);
  padding-top: var(--hpe-dataCell-default-medium-paddingTop);
  padding-bottom: var(--hpe-dataCell-default-medium-paddingBottom);
  border-bottom-style: solid;
  border-bottom-width: var(--hpe-dataCell-default-medium-borderBottomWidth);
  border-color: var(--hpe-dataCell-default-rest-borderColor);
  font-size: var(--hpe-dataCell-default-medium-fontSize);
  line-height: var(--hpe-dataCell-default-medium-lineHeight);
  color: var(--hpe-dataCell-default-rest-textColor);
}

th {
  padding-inline: var(--hpe-headerCell-default-medium-paddingX);
  padding-top: var(--hpe-headerCell-default-medium-paddingTop);
  padding-bottom: var(--hpe-headerCell-default-medium-paddingBottom);
  border-bottom-style: solid;
  border-bottom-width: var(--hpe-headerCell-default-medium-borderBottomWidth);
  border-color: var(--hpe-headerCell-default-rest-borderColor);
  line-height: var(--hpe-headerCell-default-medium-lineHeight);
  font-size: var(--hpe-headerCell-default-medium-fontSize);
  font-weight: var(--hpe-headerCell-default-medium-fontWeight);
  color: var(--hpe-headerCell-default-rest-textColor);
}

/* Notification */
.notification {
  --notification-backgroundColor: var(--color-background-status-info);
  background: var(--notification-backgroundColor);
  padding: var(--hpe-spacing-small);
  border-radius: var(--hpe-radius-large);
  gap: var(--hpe-spacing-small);
}
.notification.warning {
  --notification-backgroundColor: var(--hpe-color-background-status-warning);
}
.notification.critical {
  --notification-backgroundColor: var(--hpe-color-background-status-critical);
}
.notification.ok {
  --notification-backgroundColor: var(--hpe-color-background-status-ok);
}

/* Page, PageContent */
.page {
  display: flex;
  flex-direction: column;
  box-sizing: border-box;
  max-width: 100%;
  width: 100%;
  padding-block: var(--hpe-spacing-large);
}

.pageContent {
  display: flex;
  flex-direction: column;
  box-sizing: border-box;
  align-self: center;
  max-width: 1536px;
  min-width: 384px;
  width: 100%;
  padding-inline: var(--hpe-spacing-large);
}

/* PageHeader */
.pageHeader {
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  justify-content: space-between;
  /* padding: var(--spacing-medium) 0 var(--spacing-large) 0; */
}

.text-emphasis {
  color: var(--hpe-color-text-strong);
  font-weight: 500;
}
